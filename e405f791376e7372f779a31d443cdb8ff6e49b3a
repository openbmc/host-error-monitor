{
  "comments": [
    {
      "key": {
        "uuid": "ba69fa38_abb96d89",
        "filename": "src/host_error_monitor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 123,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2021-02-12T15:33:47Z",
      "side": 1,
      "message": "this is going to cause problem, esp. ObjectMapper, will complain about introspect failure during AC cycle boot, as it won\u0027t get response, till the response for the initializeHostState is handled.\nBetter logic is do io post of this and below line, to give a chance to handle object mapper request.",
      "revId": "e405f791376e7372f779a31d443cdb8ff6e49b3a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7db7541e_bccbb5e4",
        "filename": "src/host_error_monitor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 123,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-02-12T19:09:59Z",
      "side": 1,
      "message": "I chose this way so that host-error-monitor could still exit with a failure on line 128 if any of the signal monitors fails to start.  If I io::post startMonitors(), is there a good way to exit on failure?",
      "parentUuid": "ba69fa38_abb96d89",
      "revId": "e405f791376e7372f779a31d443cdb8ff6e49b3a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1d59594_1f049fc3",
        "filename": "src/host_error_monitor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 123,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-02-12T20:29:40Z",
      "side": 1,
      "message": "I found the io.stop() method which exits, but doesn\u0027t clearly show the failure.  So, I went with a throw for now.  We can discuss other options if there are better ways.  Thanks!",
      "parentUuid": "7db7541e_bccbb5e4",
      "revId": "e405f791376e7372f779a31d443cdb8ff6e49b3a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}